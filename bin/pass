#!/usr/bin/env php
<?php
/**
 * Password - A command-line tool to help you manage your password
 *
 * @author  admin@dowte.com
 * @link    https://github.com/dowte/password
 * @license https://opensource.org/licenses/MIT
 */

use Dowte\Password\pass\Password;
use Dowte\Password\pass\Application;
use Dowte\Password\pass\db\RegisterDb;
use Dowte\Password\commands\UserCommand;
use Dowte\Password\commands\PasswordCommand;
use Dowte\Password\commands\FindCommand;
use Dowte\Password\commands\InitCommand;
use Dowte\Password\commands\CompletionCommand;
use Dowte\Password\commands\CleanCommand;
use Dowte\Password\commands\GenerateCommand;
use Dowte\Password\commands\AlfredCommand;
use Dowte\Password\commands\ImportCommand;
use Dowte\Password\commands\ExportCommand;

/* -----------------------------------------------------------------------------------------------------
 * Check PHP version and composer autoload file.
 * -----------------------------------------------------------------------------------------------------
 */
if (version_compare(PHP_VERSION, '5.6', '<')) {
    die("Password need php version not lower than 5.6\n");
} elseif ( ! file_exists(__DIR__ . '/../vendor/autoload.php')) {
    die('Not found composer autoload.php');
}

/* ------------------------------------------------------------------------------------------------------
 * Require composer autoload.
 * ------------------------------------------------------------------------------------------------------
 */
require(__DIR__ . '/../vendor/autoload.php');

/* ------------------------------------------------------------------------------------------------------
 * Require constant
 * ------------------------------------------------------------------------------------------------------
 */
require(__DIR__ . '/../src/pass/Define.php');

/* ------------------------------------------------------------------------------------------------------
 * Load config
 * ------------------------------------------------------------------------------------------------------
 */
if (file_exists(CONF_FILE)) {
    $config = \Symfony\Component\Yaml\Yaml::parseFile(CONF_FILE);
    Password::init($config);
} else {
    Password::notice('The pass-conf.php is not exists, please configure it or use init command to generate.');
}

/* ------------------------------------------------------------------------------------------------------
 * Register DbException
 * ------------------------------------------------------------------------------------------------------
 */
$registerDB = new RegisterDb();
$registerDB->registerDbException(new \Dowte\Password\pass\exceptions\DbException());

/* --------------------------------------------------------------------------------------------------------
 * Build a symfony console application.
 *
 * The Application will try to search for the corresponding password when the command is not defined.
 * --------------------------------------------------------------------------------------------------------
 */
$app = new Application();

/* --------------------------------------------------------------------------------------------------------
 * Add configuration to shell environment, if you want to use completion.
 * --------------------------------------------------------------------------------------------------------
 */
$app->add(new CompletionCommand());

/* --------------------------------------------------------------------------------------------------------
 * Add commands.
 * --------------------------------------------------------------------------------------------------------
 */
$app->add(new InitCommand());
$app->add(new UserCommand());
$app->add(new PasswordCommand());
$app->add(new CleanCommand());
$app->add(new GenerateCommand());
$app->add(new AlfredCommand());
$app->add(new ImportCommand());
$app->add(new ExportCommand());
$app->add(new FindCommand());

/* --------------------------------------------------------------------------------------------------------
 * Set default command.
 * --------------------------------------------------------------------------------------------------------
 */
$app->setDefaultCommand((new FindCommand())->getName());

/* --------------------------------------------------------------------------------------------------------
 * Run the console application.
 * --------------------------------------------------------------------------------------------------------
 */
$app->run();

